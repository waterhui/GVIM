->如果你的vim有使用echofunc插件来显示函数的参数定义, 那么在使用ctags生产索引文件时需要使用如下附加参数:

　　ctags -R --fields=+lS

　　->ctags默认生成的索引文件只包含了对C语言的语法分析, 如果你需要ctags支持对C++语法分析. 需要使用下面的命令:

　　ctags -R --c++-kinds=+p --fields=+iaS --extra=+q
在头文件目录的命令行下执行该命令即可生成该目录的所有关于c/c++的tags信息
在工程目录下执行即可生成该项目的tags信息,实现项目内的补全

   ------------------------------------------------------------ 
----对于c++
    ctags -R --language-force=c++ --c++types=+px --verbose --extra=+q
    extra=+q 用来增加生成Class::member的形式,默认没有这样就可以用:ts
    CView::OnDraw这种形式看
    因为c++的的一些头文件不使用.h所以要用--language-force
----对于java
    ctags -R --language=java 路径名称(如"ctags -R --language=java c:jdk131/src")

    ------------------------------------------------------------ 

    ctags -R --fields=+iaS --extra=+q * --fields=[+|-]flags --fields
    --fields指定tags的可用扩展域(extension fields ),以包含到tags的入口。
    i:继承讯息Inheritance information
    a:类成员的访问控制信息Access(or export)of class members
    S:常规签名信息,如原型或参数表 Signature of routine(eg. prototype or
    parameter list)
    --extra=[+|-]flags
    指定是否包含某种扩展信息到tags入口。
    q:包含类成员信息(如c++,java,Eiffel)。但就算是c语言的结构,也需要这两个参数设置才能获得成员信息如.或->

    ------------------------------------------------------------    
    但是,对于系统的函数,还是没有跳转.如socket定义,inetaddr_in这样的结构没有自动变量完成。
    最简单的方法:
    ctags --fields=+iaS --extra=+q -R -f 路径名

    但如果要补全socket系列函数,因为里面有__THROW的宏定义所以无法生成tags
    解决方法:
    ctags -l __THROW -l _attribute_pure__ -l __nonnull -
    __attribute__ --file-scope=yes --langmap=c:+.h --language=c,c++
    --links=yes --c-kinds=+p --c++-kinds=+p --fields=+iaS --extra=+q -R -f
    路径名 路径名

    简化后:
    ctags -l __THROW -l _attribute_pure__ -l __nonnull -
    __attribute__ --file-scope=yes --langmap=c:+.h --language=c,c++
    --links=yes --c-kinds=+p --c++-kinds=+p --fields=+iaS --extra=+q -f
    路径名*  路径名*

    ------------------------------------------------------------
    在vim中使用生成tags命令
    set nocp
    filetype plugin on
    map<C-F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
    则在按下ctrl+F12即成功该文件中加的tags(vim在根目录下打开)

    ------------------------------------------------------------ 
    对于我们平常用到的头文件,可以自己手动生成一份,放到固定的文件夹下,之后写代码就方便了.

    比如我的lib_tags就是编译了linux的头文件生成的
    ctags --c-kinds=+px --c++-kinds=+px --fields=+iafksS --extra=+qf -R /usr/include/*
    有了这个tag,还可以发挥vim的跳转功能.记得--extra一定要+f,这样遇到头文件我们也能跳转进头文件了.